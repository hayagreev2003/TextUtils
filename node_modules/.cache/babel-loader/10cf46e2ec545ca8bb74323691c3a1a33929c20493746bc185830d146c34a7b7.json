{"ast":null,"code":"var _jsxFileName = \"D:\\\\TextUtils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [M, setM] = useState('Enable');\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showalert(\"Dark Mode Enabled\", \"success\");\n      setM('Disable');\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Dark Mode Disabled\", \"success\");\n      setM('Enable');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        M: M\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showalert: showalert,\n              heading: \"Enter the text to analyze\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Ey8ZMSwmCSciGycM/Dz+ynGlokU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Alert","Navbar","TextForm","React","useState","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","M","setM","alert","setalert","showalert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","_c","$RefreshReg$"],"sources":["D:/TextUtils/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport About from \"./components/About\";\r\nimport Alert from \"./components/Alert\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport React, { useState } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light');\r\n  const [M, setM] = useState('Enable');\r\n  const [alert, setalert] = useState(null);\r\n\r\n  const showalert = (message, type)=>{\r\n    setalert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setalert(null)\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    \r\n    if(mode === 'light'){\r\n      setmode('dark')\r\n      document.body.style.backgroundColor='#042743'\r\n      showalert(\"Dark Mode Enabled\",\"success\")\r\n      setM('Disable')\r\n    }\r\n    else{\r\n      setmode('light')\r\n      document.body.style.backgroundColor='white'\r\n      showalert(\"Dark Mode Disabled\",\"success\")\r\n      setM('Enable')\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} M={M}/>\r\n      <Alert alert={alert}/>\r\n      <div className=\"container my-3\">\r\n        <Routes> \r\n          {/* /users --> component 1\r\n          /users/home --> component 2 */}\r\n          <Route exact path=\"/about\" element={<About mode={mode}/>}/>\r\n          <Route exact path=\"/\" element={<TextForm showalert={showalert} heading=\"Enter the text to analyze\" mode={mode}/>}/>\r\n          {/* <TextForm showalert={showalert} heading=\"Enter the text to analyze\" mode={mode}/> */}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}